AWSTemplateFormatVersion: "2010-09-09"
Description: A template that stands up a slackbot lambda function.
Parameters:
  ApiGatewayName:
    Type: String
    Default: slackbot-gateway
    Description: The name of the api gateway
  ApiGatewayRootMethod:
    Type: String
    Default: POST
    Description: The root method for the api gateway (Example - POST - GET)
  App:
    Type: String
    Default: Slackbot
    Description: The name of the application
  Env:
    Type: String
    Default: dev
    Description: The name of the environment the resources will be deployed to
  LambdaFuncName:
    Type: String
    Default: slackbot-func
    Description: The name of the lambda function
  LambdaPolicyName:
    Type: String
    Default: slackbot-func-policy
    Description: The name of the lambda role policy
  LambdaRoleName:
    Type: String
    Default: slackbot-func-role
    Description: The name of the lambda role
  Region:
    Type: String
    Default: us-west-2
    Description: The region to deploy the lambda function
Resources:
  SlackbotGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: The rest api gateway that will trigger the lambda function
      Name: !Sub ${Env}-${ApiGatewayName}-${Region}
      Tags:
        - Key: "App"
          Value: !Sub ${App}
  SlackbotGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: SlackbotGatewayRootMethod
    Description: The deployment of the api gateway
    Properties:
      RestApiId: !Ref SlackbotGateway
      StageName: !Sub ${Env}
  SlackbotGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: !Sub ${ApiGatewayRootMethod}
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations 
          - LambdaArn: !GetAtt SlackbotFunction.Arn
      ResourceId: !GetAtt SlackbotGateway.RootResourceId
      RestApiId: !Ref SlackbotGateway
  SlackbotFunction:
    Type: AWS::Lambda::Function
    Properties: 
      Architectures: 
        - x86_64
      Code: 
        ZipFile: |
          print("Hello world!")
      FunctionName: !Sub ${Env}-${LambdaFuncName}-${Region}
      Handler: !Sub ${LambdaFuncName}.lambda_handler
      MemorySize: 128
      PackageType: Zip
      Role: !GetAtt SlackbotFunctionRole.Arn
      Runtime: python3.10
      Tags:
        - Key: "App"
          Value: !Sub ${App}      
  SlackbotFunctionLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Env}-${LambdaFuncName}-${Region}
      RetentionInDays: 30
      Tags:
        - Key: "App"
          Value: !Sub ${App}      
  SlackbotFunctionRole:
    Type: AWS::IAM::Role
    DependsOn: SlackbotFunctionRolePolicy
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                lambda.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
      Description: The iam role that will be used to execute the lambda function
      ManagedPolicyArns: 
        - !Ref SlackbotFunctionRolePolicy
      RoleName: !Sub ${Env}-${LambdaRoleName}-${Region}
      Tags:
        - Key: "App"
          Value: !Sub ${App}
  SlackbotFunctionRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${Env}-${LambdaPolicyName}-${Region}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogGroup'
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            - Effect: Allow
              Action:
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: !GetAtt SlackbotFunctionLogs.Arn
  SlackbotFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SlackbotFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${Region}:${AWS::AccountId}:${SlackbotGateway}/${Env}/${ApiGatewayRootMethod}/
